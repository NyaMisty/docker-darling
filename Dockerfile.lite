FROM ubuntu:18.04 as builder

# Install deps.
RUN set -xe; \
    dpkg --add-architecture i386; \
    apt-get update; \
    apt-get install -y \
        bison \
        clang \
        cmake \
        flex \
        gcc-multilib \
        git \
        kmod \
        libbsd-dev \
        libc6-dev:i386 \
        libcairo2-dev \
        libcap2-bin \
        libegl1-mesa-dev \
        libelf-dev \
        libfontconfig1-dev \
        libfreetype6-dev \
        libfreetype6-dev:i386 \
        libfuse-dev \
        libgl1-mesa-dev \
        libtiff5-dev \
        libudev-dev \
        libxml2-dev \
        linux-headers-generic \
        pkg-config \
        sudo \
        xz-utils; \
    rm -rf /var/lib/apt/lists/*;

# Clone Darling
ARG DARLING_GIT_REF="master"
RUN set -xe; \
    mkdir -p /src; \
    git clone --recurse-submodules https://github.com/darlinghq/darling.git /src/darling;

WORKDIR /src/darling

# Checkout working gitref
RUN set -xe; \
    git checkout ${DARLING_GIT_REF}; \
    git submodule update --recursive; \
    mkdir -p /src/darling/build;

# Set our working directory to the build dir
WORKDIR /src/darling/build

# Configure Darling Build
RUN set -xe; \
    cmake ..;

# Build Darling
RUN set -xe; \
    make -j$(getconf _NPROCESSORS_ONLN);

# Install Darling    
RUN set -xe; \
    make install; \
    cp /src/darling/build/src/startup/rtsig.h /src/darling/rtsig.h ;\
    rm -rf /usr/src/linux-*; \
    rm -rf /src/darling/build; \
    mkdir -p /src/darling/build/src/startup; \
    mv /src/darling/rtsig.h /src/darling/src/startup/rtsig.h;

# Create fresh image from Ubuntu
FROM ubuntu:18.04

# Create our group & user.
RUN set -xe; \
    groupadd -g 1000 darling; \
    useradd -g darling -u 1000 -s /bin/sh -d /home/darling darling;

# Install deps.
RUN set -xe; \
    dpkg --add-architecture i386; \
    apt-get update; \
    apt-get install -y \
        sudo; \
    rm -rf /var/lib/apt/lists/*;

# Setup sudo access
RUN set -xe; \
    echo "darling ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers;

# Copy our Darling build from previous stage
COPY --from=builder /usr/local /usr/local

ARG VCS_REF
ARG BUILD_DATE
ARG VERSION

# Labels / Metadata.
LABEL \
    org.opencontainers.image.authors="James Brink <brink.james@gmail.com>" \
    org.opencontainers.image.created="${BUILD_DATE}" \
    org.opencontainers.image.description="darling lite version (no kernel module) ($VERSION)" \
    org.opencontainers.image.revision="${VCS_REF}" \
    org.opencontainers.image.source="https://github.com/utensils/docker-darling.git" \
    org.opencontainers.image.title="darling (lite)" \
    org.opencontainers.image.vendor="Utensils" \
    org.opencontainers.image.version="git - ${DARLING_GIT_REF}"

# Copy our entrypoint into the container.
COPY ./runtime-assets/usr/local/bin/lite-entrypoint.sh /usr/local/bin/entrypoint

# Setup our environment variables.
ENV PATH="/usr/local/bin:$PATH"

# Drop down to our unprivileged user.
USER darling

# Set our working directory.
WORKDIR /home/darling

# Set the entrypoint.
ENTRYPOINT ["/usr/local/bin/entrypoint"]

# Set the default command
CMD ["/usr/local/bin/darling", "shell"]
